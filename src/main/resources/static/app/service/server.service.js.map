{"version":3,"sources":["app/service/server.service.js","app/service/server.service.ts"],"names":["System","register","exports_1","context_1","core_1","http_1","Observable_1","ServerService","__decorate","id","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","setters","core_1_1","http_1_1","Observable_1_1","_1","execute","http","Server","GETRandomNumber","prototype","getRandomNumber","get","map","res","json","error","Observable","Injectable","Http"],"mappings":"AAAAA,OAAOC,UAAU,gBAAiB,gBAAiB,kBAAmB,WAAY,SAASC,EAAWC,GAClG,YACA,IAUIC,GAAQC,EAAQC,EAChBC,EAVAC,GADeL,GAAaA,EAAUM,GACxBC,MAAQA,KAAKF,YAAe,SAAUG,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,gBAAZQ,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIU,GAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,IAE5DO,EAAchB,MAAQA,KAAKgB,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,GAI1G,QACIE,SACI,SAAUC,GACN3B,EAAS2B,GAEb,SAAUC,GACN3B,EAAS2B,GAEb,SAAUC,GACN3B,EAAe2B,GAEnB,SAAUC,MACdC,QAAS,WCpBjB5B,EAAA,WACI,QAAAA,GAAoB6B,GAAA1B,KAAA0B,KAAAA,EAEZ1B,KAAA2B,QACJC,gBAAiB,sBASzB,MANI/B,GAAAgC,UAAAC,gBAAA,WACI,MAAO9B,MAAK0B,KAAKK,IAAI/B,KAAK2B,OAAOC,iBAC5BI,IAAI,SAAAC,GAAO,MAASA,GAAIC,SADtBlC,SAEI,SAAAmC,GAAS,MAAAvC,GAAAwC,WAAAxC,SAAiBuC,EAAMD,OAAOC,OAAS,mBAXnEtC,EAAAC,GAACJ,EAAA2C,aDoCmBrB,EAAW,qBAAsBrB,EAAO2C,QACzCzC,MCpCnBL,EAAA,gBAAAK","file":"server.service.js","sourcesContent":["System.register(['angular2/core', 'angular2/http', 'rxjs/Observable', 'rxjs/Rx'], function(exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 && context_1.id;\n    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    };\n    var __metadata = (this && this.__metadata) || function (k, v) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n    };\n    var core_1, http_1, Observable_1;\n    var ServerService;\n    return {\n        setters:[\n            function (core_1_1) {\n                core_1 = core_1_1;\n            },\n            function (http_1_1) {\n                http_1 = http_1_1;\n            },\n            function (Observable_1_1) {\n                Observable_1 = Observable_1_1;\n            },\n            function (_1) {}],\n        execute: function() {\n            ServerService = (function () {\n                function ServerService(http) {\n                    this.http = http;\n                    this.Server = {\n                        GETRandomNumber: '/get-random-number'\n                    };\n                }\n                ServerService.prototype.getRandomNumber = function () {\n                    return this.http.get(this.Server.GETRandomNumber)\n                        .map(function (res) { return res.json(); })\n                        .catch(function (error) { return Observable_1.Observable.throw(error.json().error || 'Server error'); });\n                };\n                ServerService = __decorate([\n                    core_1.Injectable(), \n                    __metadata('design:paramtypes', [http_1.Http])\n                ], ServerService);\n                return ServerService;\n            }());\n            exports_1(\"ServerService\", ServerService);\n        }\n    }\n});\n","import {Injectable} from 'angular2/core';\nimport {Http, Response} from 'angular2/http';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class ServerService {\n    constructor(private http: Http) {}\n\n    private Server = {\n        GETRandomNumber: '/get-random-number'\n    };\n\n    getRandomNumber() {\n        return this.http.get(this.Server.GETRandomNumber)\n            .map(res => <number> res.json())\n            .catch(error => Observable.throw(error.json().error || 'Server error'))\n    }\n\n}"]}